package main.interfaces;

/** 
 * A Page object represents a page on the marzipops.com website.
 * This is a page of any type: a category, product, contact us, etc.
 * 
 * @Type Abstract
 * @AbstractMethods String buildContent()
 * @Constructors Page(String, String, Type) and Page(String, String, String, Type)
 * @Enums Type (types of pages)
 * @
 */
public abstract class Page {
	
	/**
	 * An enum that represents the type of a webpage.
	 * @values PRODUCT, CATEGORY, SPECIAL
	 */
	public enum Type{
		/**
		 * The webpage is a page detailing a product.
		 */
		PRODUCT,
		
		/**
		 * The webpage is a page detailing a category of products.
		 */
		CATEGORY, 
		
		/**
		 * The webpage is a page that serves some special purpose, such as the About page or the Contact page
		 */
		SPECIAL
	};
	
	
	/**
	 * The raw name of the page, as it would appear on the name of the file.
	 */
	private String rawName;
	
	/**
	 * The name of the page that has been change to HTML formatting.
	 * This is how the name would appear on a title or in a webpage.
	 */
	private String adjName;
	
	/**
	 * The location of the file of the page. This does not include the name of the file.
	 */
	private String location;
	
	/**
	 * The type of the page.
	 */
	private Type pageType;
	
	/**
	 * The default constructor for a page. Assumes that the adjName is a derivative of the rawName.
	 * @param rawName is the name of the page as it would appear on the name of the file.
	 * @param location is the location of the page, not including the fileName
	 * @param pageType
	 */
	public Page(String rawName, String location, Type pageType){
		this.rawName = rawName;
		this.adjName = rawName.replaceAll("-", "&dash;")
							.replaceAll("'", "&#39;");

		this.location = location;
		
		this.pageType = pageType;
	}
	
	public Page(String rawName, String adjName, String location, Type pageType){
		this(rawName, location, pageType);
		this.adjName = adjName;
	}
	
	
	public String getHTML(){
		return buildHead() + buildTop() + buildContent() + buildFooter();
	}
	
	private String buildHead(){
		String pageTitle;
		if(rawName.equals("index")){pageTitle = "marzipops";}else{pageTitle = "marzipops: " + adjName;}
		
		String write = "<!doctype html><html>" +
				"<head>" +
				"<title>" + pageTitle + "</title>" +
				"<meta name='p:domain_verify' content='b556a9473bc0ff0cfd08b0608c15ffa3'/>" +
				"<link rel='stylesheet' type='text/css' href='" + getReverseLocation() + "Foundation/css/foundation.css'></link>" +
				"<link rel='stylesheet' type='text/css' href='" + getReverseLocation() + "Foundation/css/style.css'></link>" +
				"<script src='" + getReverseLocation() + "Javascript/Javascript.js'></script>" +
				"<script src='" + getReverseLocation() + "Javascript/Lists.js'></script>" +
				"<script src='" + getReverseLocation() + "Javascript/Search.js'></script>" +
				"</head>" +
				"<body onload='javascript(\"" + rawName + "\", \"" + getReverseLocation() + "\", " + (pageType == Type.PRODUCT) + ")'>";
		
		//Website Wrapper
		write += "<div id='full' style='visibility: hidden;'>";	

		return write;
	}
	
	private String buildTop(){
		//Logo and search box
		String write = "<div id='header'>" + Constants.BLANK + "<div class='row id='logo'>" +
				"<div class='show-for-medium-up medium-3 columns'>&nbsp</div>" +
				"<div class='small-12 medium-6 columns'><a href=" + getReverseLocation() + "index.html><img id='logo' src='" + getReverseLocation() + "Images/Logo.jpg'></imgs></a></div>" +
				"<div class='small-12 medium-3 columns' id='searchWrapper'>&nbsp;</div>" +
				"</div><br>";

		//Navagation bar
		write += "<div class='row'><div class='small-12 columns'><ul id='nav'>";
		for(int i=Constants.SPECIALS.length-1; i>=0; i--){
			write = write + "<li><a href='" + getReverseLocation() + Constants.SPECIALS[i] + ".html#'>" + Constants.SPECIALS[i].toLowerCase() + "</a></li>";
			if(i != Constants.SPECIALS.length-1){
				write = write + "<li class='popBlue'>|</li>";
			}
		}

		//Social Media pop-ups
		for(int i=0; i<Constants.MEDIA.length; i++){
			write = write + "<li class='show-for-medium-up socialNav' id='" + Constants.MEDIA[i] + "'><a href='http://www." + Constants.MEDIA[i] + ".com/marzipops' target='_blank'><img src='" + getReverseLocation() + "Images/Social Media/Orange " + Constants.MEDIA[i] + ".jpg'></img></a></li>";
		}
		write += "</ul></div></div>";

		write += Constants.BLANK + "</div>";
		
		write += "<div id='content'>";

		return write;
	}
	
	public abstract String buildContent();
	
	private String buildFooter(){
		String write = "";	
		
		//Bottom social media links
		write += "</div><div id='footer'><div class='row show-for-small-only'><div class='small-6 small-centered columns'><div class='row'>";
		for(int i=0; i<Constants.MEDIA.length; i++){
			write += "<div class='small-3 columns'><a href='http://www." + Constants.MEDIA[i] + ".com/marzipops' target='_blank'><img src='" + getReverseLocation() + "Images/Social Media/Orange " + Constants.MEDIA[i] + ".jpg'></img></a></div>";
		}
		write += "</div></div></div></div></div>" ;


		//Pintrist
		if(pageType == Type.PRODUCT){
			write += "<script async defer src='http://assets.pinterest.com/js/pinit.js'></script>";
		}

		
		//Foundation
		write += "</div><script src='" + getReverseLocation() + "Foundation/js/vendor/jquery.js'></script>" +
				"<script src='" + getReverseLocation() + "Foundation/js/vendor/fastclick.js'></script>" +
				"<script src='" + getReverseLocation() + "Foundation/js/foundation.min.js'></script>" +
				"<script>jQuery.noConflict();$(document).foundation();</script>";

		
		//Google Analytics
		write += "<script>" +
					"(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){" +
						"(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o)," +
						"m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)" +
					"})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');" +
					"ga('create', 'UA-78064797-1', 'auto');" +
					"ga('send', 'pageview');" +
  				"</script>";

		write += "</body></html>";

		return write;
	}
	
	public String getRawName(){
		return rawName;
	}
	
	public String getAdjNam(){
		return adjName;
	}
	
	public String getLocation(){
		return location;
	}
	
	public String getReverseLocation(){
		int numberOfFolders = location.length() - location.replace(".", "").length();
		
		String str = "";
		for(int i=0; i<numberOfFolders; i++){
			str += "../";
		}
		
		return str;
	}
}
